// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
  role     String // e.g., "admin", "employee", "customer"
}

model Product {
  id            String    @id @default(uuid())
  name          String
  sku           String    @unique
  category      String?
  description   String?
  price         Decimal   @db.Decimal(10, 2)
  stockQuantity Int       @default(0)
  reorderLevel  Int       @default(10)
  supplier      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  OrderItems    OrderItem[]
  TransactionItems OrderTransactionItem[]
}

model Customer {
  id          String    @id @default(uuid())
  name        String
  email       String?   @unique
  phone       String?
  address     Json?     @db.JsonB
  totalOrders Int       @default(0)
  totalSpent  Decimal   @default(0) @db.Decimal(10, 2)
  lastOrder   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orders      Order[]
}

model Order {
  id            String       @id @default(uuid())
  orderNumber   String       @unique
  status        String
  paymentStatus String
  totalAmount   Decimal      @db.Decimal(10, 2)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  customerId    String?
  customer      Customer?    @relation(fields: [customerId], references: [id])
  shippingAddress Json?      @db.JsonB
  items         OrderItem[]
  delivery      Delivery[]
  shipment      Shipment?
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
}

model Delivery {
  id                String    @id @default(uuid())
  orderId           String?
  order             Order?    @relation(fields: [orderId], references: [id])
  driverName        String?
  vehicleId         String?
  status            String
  estimatedDelivery DateTime?
  actualDelivery    DateTime?
  location          Json?     @db.JsonB
  route             Json?     @db.JsonB
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model OrderTransaction {
  id                String                 @id @default(uuid())
  transactionNumber String                 @unique
  totalAmount       Decimal                @db.Decimal(10, 2)
  paymentMethod     String
  cashierId         String?
  createdAt         DateTime               @default(now())
  updatedAt         DateTime               @updatedAt
  items             OrderTransactionItem[]
}

model OrderTransactionItem {
  id             String           @id @default(uuid())
  transactionId  String
  transaction    OrderTransaction @relation(fields: [transactionId], references: [id])
  productId      String
  product        Product          @relation(fields: [productId], references: [id])
  quantity       Int
  price          Decimal          @db.Decimal(10, 2)
}

model Service {
  id          String   @id @default(uuid())
  name        String
  category    String?
  description String?
  price       Decimal  @db.Decimal(10, 2)
  duration    String?
  status      String   @default("Active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Shipment {
  id                String    @id @default(uuid())
  shipmentNumber    String    @unique
  orderId           String?   @unique
  carrier           String?
  trackingNumber    String?
  status            String
  estimatedDelivery DateTime?
  actualDelivery    DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  order             Order?    @relation(fields: [orderId], references: [id])
}

model Barcode {
  id          String   @id @default(uuid())
  code        String   @unique
  entityType  String
  entityId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Employee {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String?  @unique
  phone     String?
  hireDate  DateTime @default(now())
  jobTitle  String
  salary    Decimal? @db.Decimal(10, 2)
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
